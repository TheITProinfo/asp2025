@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav d-flex align-items-center">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @UserManager.GetUserName(User)!
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="btn btn-outline-light btn-sm ms-2">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item d-flex align-items-center gap-2">
            <a class="nav-link text-light p-0" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
            <a class="btn btn-outline-light btn-sm" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>


